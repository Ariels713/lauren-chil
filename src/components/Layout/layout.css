@import "open-props/style";
@import "open-props/normalize";

:root {
  --brand: hsla(198, 71%, 14%, 1);
  --text1: var(--text1-light);
  --text2: var(--text2-light);

  --surface1: var(--surface1-light);
  --surface2: var(--surface2-light);
  --surface3: var(--surface3-light);
  --surface4: var(--surface4-light);
}

@media (prefers-color-scheme: dark) {
  :root {
    --brand: var(--gray-2);

    --text1: var(--text1-dark);
    --text2: var(--text2-dark);

    --surface1: var(--surface1-dark);
    --surface2: var(--surface2-dark);
    --surface3: var(--surface3-dark);
    --surface4: var(--surface4-dark);
  }
}

@media (prefers-contrast: less) {
  :root {
    --brand: var(--brand-dim);

    --text1: var(--text1-dim);
    --text2: var(--text2-dim);

    --surface1: var(--surface1-dim);
    --surface2: var(--surface2-dim);
    --surface3: var(--surface3-dim);
    --surface4: var(--surface4-dim);
  }
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
  }
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* 2. Remove default margin for common elements */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
blockquote,
ul,
ol,
dl,
dt,
dd {
  margin: 0;
}
/*
    3. Allow percentage-based heights in the application
  */
html,
body {
  height: 100%;
}
/*
    4. Improve the typography across the site.
  */
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  /* Modern CSS Reset */
  text-rendering: optimizeSpeed;
  /* ðŸŸ£ Set base font-family */
  font-family: system-ui, sans-serif;
}
/* 5. Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}
/* 6. Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}
/*
    7. Create a root stacking context
  */
/* #__next {
    isolation: isolate;
    height:100%;
  } */

/* Modern CSS Reset Start */

:where(ul, ol):where([role="list"]) {
  margin: 0;
  padding: 0;
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}
a:not([class]) {
  /* ðŸŸ£ Relatively sized thickness and offset */
  text-decoration-thickness: max(0.08em, 1px);
  text-underline-offset: 0.15em;
}

img[width] {
  height: auto;
}

:target {
  scroll-margin-top: 2rem;
}

:focus {
  scroll-margin-bottom: 8vh;
}

/* Flex Utility Classes */
.layout-flex {
  --gap: 2rem;
  --wrap: wrap;

  display: flex;
  flex-wrap: var(--wrap);
  gap: var(--gap);
}

.container {
  --container-width: 80ch;

  width: min(var(--container-width), 100vw - 3rem);
  margin-inline: auto;
}

/* https://piccalil.li/tutorial/fluid-typography-with-css-clamp/*/
.section,
section {
  margin-block: 8vh;
}

h1,
h2,
h3,
h4,
p {
  font-size: clamp(
    var(--fluid-type-min, 1rem),
    calc(1rem + var(--fluid-type-target, 3vw)),
    var(--fluid-type-max, 1.125rem)
  );
}

h1 {
  --fluid-type-min: 2.5rem;
  --fluid-type-max: 3rem;
  --fluid-type-target: 5vw;

  max-width: 15ch;
}

h2 {
  --fluid-type-min: 1.8rem;
  --fluid-type-max: 2.5rem;
}

h3 {
  --fluid-type-min: 1.5rem;
  --fluid-type-max: 2rem;
}

h4 {
  --fluid-type-min: 1.25rem;
  --fluid-type-max: 1.75rem;
}

h2,
h3,
h4 {
  max-width: 30ch;
}

p {
  max-width: 60ch;
}

:is(h1, h2, h3, h4, .h1, .h2, .h3, .h4) {
  line-height: calc(2px + 2ex + 2px);
  margin-block-end: 0.65em;
  overflow-wrap: break-word;
  hyphens: auto;
}
